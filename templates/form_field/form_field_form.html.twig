{% extends '@OHMediaBackend/form.html.twig' %}

{% set form_field_fqns = 'OHMedia\\FormBundle\\Entity\\FormField' %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
  const typeChoice = "{{ constant(form_field_fqns ~ '::TYPE_CHOICE') }}";
  const typeEmail = "{{ constant(form_field_fqns ~ '::TYPE_EMAIL') }}";
  const typePhone = "{{ constant(form_field_fqns ~ '::TYPE_PHONE') }}";
  const typeText = "{{ constant(form_field_fqns ~ '::TYPE_TEXT') }}";

  const type = document.getElementById('{{ form.type.vars.id }}');

  const form = type.form;

  const help = document.getElementById('{{ form.help.vars.id }}');

  const choices = document.getElementById('{{ form.data.choices.vars.id }}');

  const multiple = form.elements['{{ form.data.multiple.vars.full_name }}'];

  const copy = form.elements['{{ form.data.copy.vars.full_name }}'];

  const reply = form.elements['{{ form.data.reply.vars.full_name }}'];

  const autocomplete = form.elements['{{ form.data.autocomplete.vars.full_name }}'];

  function onTypeChange() {
    const isTypeChoice = typeChoice === type.value;
    const isTypeEmail = typeEmail === type.value;
    const isTypePhone = typePhone === type.value;
    const isTypeText = typeText === type.value;

    help.parentNode.style.display = isTypePhone ? 'none' : '';

    choices.parentNode.style.display = isTypeChoice ? '' : 'none';
    choices.required = isTypeChoice;

    toggleRadioNodeList(multiple, isTypeChoice);

    toggleRadioNodeList(copy, isTypeEmail);
    toggleRadioNodeList(reply, isTypeEmail);

    autocomplete.parentNode.style.display = isTypeText ? '' : 'none';
  }

  function toggleRadioNodeList(radioNodeList, show) {
    const container = radioNodeList[0].parentNode.parentNode;

    container.parentNode.style.display = show ? '' : 'none';
    radioNodeList.forEach((radio) => {
      radio.required = show;
    });
  }

  type.addEventListener('change', onTypeChange);

  onTypeChange();
});
</script>
{% endblock %}
